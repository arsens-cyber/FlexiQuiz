# /.github/workflows/deploy.yml

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_FRONTEND_REPO: internal-dashboard-staging-frontend
  ECR_BACKEND_REPO: internal-dashboard-staging-backend
  ECS_SERVICE: internal-dashboard-staging-service
  ECS_CLUSTER: internal-dashboard-staging-cluster
  CONTAINER_FRONTEND_NAME: frontend-container
  CONTAINER_BACKEND_NAME: backend-container

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Add execute permissions to our scripts
      - name: Make cicd scripts executable
        run: chmod +x ./cicd/*.sh

      - name: Build and Push Frontend Image
        id: build-frontend
        run: |
          ./cicd/build-and-push.sh \
            ${{ env.AWS_REGION }} \
            ${{ steps.login-ecr.outputs.registry }} \
            ${{ env.ECR_FRONTEND_REPO }} \
            ${{ github.sha }} \
            ./frontend/Dockerfile

      - name: Build and Push Backend Image
        id: build-backend
        run: |
          ./cicd/build-and-push.sh \
            ${{ env.AWS_REGION }} \
            ${{ steps.login-ecr.outputs.registry }} \
            ${{ env.ECR_BACKEND_REPO }} \
            ${{ github.sha }} \
            ./backend/Dockerfile

      - name: Deploy to Amazon ECS
        run: |
          ./cicd/deploy.sh \
            ${{ env.ECS_CLUSTER }} \
            ${{ env.ECS_SERVICE }} \
            ${{ steps.build-frontend.outputs.image_uri }} \
            ${{ steps.build-backend.outputs.image_uri }} \
            ${{ env.CONTAINER_FRONTEND_NAME }} \
            ${{ env.CONTAINER_BACKEND_NAME }}